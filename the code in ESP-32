#include <time.h>

//SSD1306    函式庫掛載
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// 設定OLED
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

//設定NTP Server 網址、調整時區的 UTC 偏移量
const char* ntpServer = "pool.ntp.org"; // NTP Server 網址
const long gmtOffset_sec = 28800; // 台灣為 GMT+8 小時，8hrs=28800sec
const int daylightOffset_sec = 0; // 日光節約時間為 0

//wifi函式庫與連線相關設定
#include <WiFi.h>
char* ssid = "1F";
char* pswd = "www3939889";

//開始WiFi連線
void WifiConnect() {
  WiFi.begin(ssid, pswd);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi連線成功");
  Serial.print("IP Address:");
  Serial.println(WiFi.localIP());
}
//MQTT函式庫與其client設定
#include <PubSubClient.h>
WiFiClient client;
PubSubClient mqtt_client(client);
//訂閱主題1:改變LED燈號(記得改Topic)
char* MQTTSubTopic1 = "alarm";
// MQTT server address:
char server[] = "broker.emqx.io";

void MQTTConnect() {

  mqtt_client.setServer(server, 1883);
  mqtt_client.setCallback(MQTTCallback);
  while (!mqtt_client.connect("yangchan")) {
    Serial.print(".");
    delay(1000);
  }
  Serial.println("");
  Serial.println("Now MQTTServer is Connected");
  mqtt_client.subscribe(MQTTSubTopic1);//訂閱SubTopic1主題
}
//MQTT  subsribe  subroutine  --接收到訂閱時
#include <Tone32.h>

#define BUZZER_PIN 2
#define BUZZER_CHANNEL 1
void alarm() {
  tone(BUZZER_PIN, NOTE_C4, 500, BUZZER_CHANNEL);
  noTone(BUZZER_PIN, BUZZER_CHANNEL);
  tone(BUZZER_PIN, NOTE_D4, 500, BUZZER_CHANNEL);
  noTone(BUZZER_PIN, BUZZER_CHANNEL);
  tone(BUZZER_PIN, NOTE_E4, 500, BUZZER_CHANNEL);
  noTone(BUZZER_PIN, BUZZER_CHANNEL);
  tone(BUZZER_PIN, NOTE_F4, 500, BUZZER_CHANNEL);
  noTone(BUZZER_PIN, BUZZER_CHANNEL);
  tone(BUZZER_PIN, NOTE_G4, 500, BUZZER_CHANNEL);
  noTone(BUZZER_PIN, BUZZER_CHANNEL);
  tone(BUZZER_PIN, NOTE_A4, 500, BUZZER_CHANNEL);
  noTone(BUZZER_PIN, BUZZER_CHANNEL);
  tone(BUZZER_PIN, NOTE_B4, 500, BUZZER_CHANNEL);
  noTone(BUZZER_PIN, BUZZER_CHANNEL);
}
void MQTTCallback(char* topic, byte* payload, unsigned int length) {
  Serial.print(topic); Serial.print("訂閱通知:");
  String payloadString;//(宣告)準備將接收的payload轉成字串
  //顯示訂閱內容
  for (int i = 0; i < length; i++) {
    payloadString = payloadString + (char)payload[i];//=>此行將接收的payload(訊息-字元陣列)轉回字串
  }
  Serial.println(payloadString);

  //比對主題是否為訂閱主題1
  if (strcmp(topic, MQTTSubTopic1) == 0) {
    Serial.println("改變燈號：" + payloadString);
    if (payloadString == "On") {
      alarm();
    }
    if (payloadString == "Off") {
      digitalWrite(2, LOW);// 若所訂閱Topic主題，其payload(訊息內容)="OFF"
    }
  }

}

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  //初始化 --啟用oled
  display.begin(SSD1306_SWITCHCAPVCC, 0x3c);
  Serial.printf("Connecting to %s ", ssid);
  WiFi.begin(ssid, pswd); // 建立 WiFi 連線
  while (WiFi.status() != WL_CONNECTED) { // 等待 WiFi 連線
    delay(500);
    Serial.print(".");
  }
  Serial.println(" CONNECTED");
  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer); // 設定 NTP 參數
  //開始MQTT連線
  MQTTConnect();
}

void loop() {
  if (WiFi.status() != WL_CONNECTED) {
    WifiConnect();
  }
  //如果MQTT連線中斷，則重啟MQTT連線
  if (!mqtt_client.connected()) {
    MQTTConnect();
  }
  mqtt_client.loop();//更新訂閱狀態
  // put your main code here, to run repeatedly:
  struct tm timeinfo; // 建立一個時間結構，稱為 timeinfo
  getLocalTime(&timeinfo); // 取回 NTP 時間
  Serial.println(&timeinfo, "%A, %B %d %Y %H:%M:%S");
  display.clearDisplay(); // 清除緩衝區資料
  display.setTextSize(2); // 設定字型大小為 2
  display.setCursor(4, 0); // 設定文字起始位置為(4,0)
  display.setTextColor(WHITE); // 設定白字黑底
  // 設定文字內容為年月日，格式為"西元年-月-日"
  display.println(&timeinfo, "%F");
  display.setCursor(24, 16); // 設定文字起始位置為(24,16)
  // 設定文字內容為星期，格式為"Mondy Tuesday..."
  display.println(&timeinfo, "%A");/*
  // 現，位置(0,32)，字型大小 14,14，顏色白色
  display.drawBitmap(0,32,str_1,14,14,WHITE);
  // 在，位置(18,32)，字型大小 14,14，顏色白色
  display.drawBitmap(18,32,str_2,14,14,WHITE);
  // 時，位置(36,32)，字型大小 14,14，顏色白色
  display.drawBitmap(36,32,str_3,14,14,WHITE);
  // 間，位置(54,32)，字型大小 14,14，顏色白色
  display.drawBitmap(54,32,str_4,14,14,WHITE);
  display.setCursor(16,48); // 設定文字起始位置為(16,48)*/
  // 設定文字內容為年月日，格式為"時:分:秒"
  display.println(&timeinfo, " %T");
  display.println("wake 05:40");
  Serial.println(&timeinfo, "%H:%M");
  display.display(); // 顯示所設定的文字
  delay(100);
}
